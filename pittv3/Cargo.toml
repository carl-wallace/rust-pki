[package]
name = "pittv3"
version = "0.1.3"
description = """
PKI Interoperability Test Tool v3 (PITTv3) can be used to build and validate certification paths using different sets
of trust anchors, intermediate CA certificates and end entity certificates.
"""
authors = [""]
license = "Apache-2.0 OR MIT"
repository = "https://github.com/carl-wallace/rust-pki"
categories = ["cryptography", "pki", "no-std"]
keywords = ["crypto", "x.509", "OCSP"]
readme = "README.md"
edition = "2021"
rust-version = "1.65"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
x509-cert = { version="0.2.4", default-features = false, features = ["pem"] }
const-oid = { version = "0.9.4", default-features = false, features = ["db"] }
cms = "0.2.2"
der = { version="0.7.7", features = ["alloc", "derive", "flagset", "oid"] }
x509-ocsp = { git = "https://github.com/RustCrypto/formats" }
base64ct = { version="1.6.0", features = ["alloc"], optional=true }
spki = { version = "0.7.2", default-features = false, features = ["alloc"] }
pem-rfc7468 = { version="0.7.0", features = ["alloc"]}

certval = { path = "../certval", default-features = false}
sha-1 = {version = "0.10.1", default-features = false}
sha2 = {version = "0.10.7", default-features = false, features = ["oid"] }

async-recursion = "1.0.4"
bytes = "1.4.0"
cfg-if = "1.0.0"
ciborium = {version = "0.2.1", default-features = false }
clap = {version = "4.3.19", features=["std", "derive"]}
flagset = { version = "0.4.3", default-features = false }
lazy_static = "1.4.*"
serde = { version = "1.0.177", default-features = false, features = ["derive", "alloc"] }
serde_json = { version = "1.0.104", default-features = false, features = ["alloc"] }

csv = {version = "1.2.2", optional = true, default-features = false}
log = {version = "0.4.19"}
log4rs = {version = "1.2.0", optional = true}

ndarray = {version = "0.15.6", optional = true}
reqwest = { version = "0.11.18", features = ["blocking"], optional = true}
tokio = { version = "1.29.1", features = ["full", "time", "rt-multi-thread"], optional = true }
walkdir = { version = "2.3.3", optional = true}

pqcrypto-internals =  {version = "0.2.4", optional = true}
pqcrypto-dilithium =  {version = "0.4.6", optional = true}
pqcrypto-falcon = {version = "0.2.10", optional = true}
pqcrypto-sphincsplus = {version = "0.6.4", optional = true}
pqcrypto = {version = "0.16.1", optional = true}
pqcrypto-traits = {version = "0.3.4", optional = true}

# todo: running against crates.io version does not at present (fails to parse in HTML transit.rs and hits an unwrap)
#dioxus = {version = "0.3.2", optional = true}
#dioxus-desktop = {version = "0.3.0", optional = true}
dioxus = { path = "../../../third-party/dioxus/packages/dioxus", optional = true }
dioxus-desktop = { path = "../../../third-party/dioxus/packages/desktop", optional = true }

home = {version = "0.5.5", optional = true}

[dev-dependencies]
assert_cmd = "2.0.12"
predicates = "3.0.3"
hex-literal = "0.4.1"
tempfile = "3.7.0"
tokio-test = "0.4.2"

# Similar to certval, there are six feature gates (one more than certval):
#   - no-default-features (i.e., no-std) provides full path validation without file system support, network or thread safety (and no revocation support)
#   - revocation adds support for verifying CRLs and OCSP responses presented to library (presumably obtained via stapling at higher protocol level)
#   - std adds file-based utilities (including graph building) and support for multi-threading (no revocation support)
#   - revocation,std adds revocation support alongside file-based utilities and support for multi-threading
#   - remote adds support for dynamic path building, CRL fetching and OCSP
#   - std-app provides the Pittv3 app with std support while building certval with no-default-features
# Default is set to be the most all encompassing (i.e., remote,webpki).
# webpki can be paired with any other feature and simply adds a means of initializing a TaSource from the webpki-roots crate
# gui adds a graphical user interface (in place of command line) in addition to default
[features]
default = ["remote", "webpki"]
revocation = ["certval/revocation"]
std_app = ["certval/revocation", "ndarray", "tokio", "base64ct", "walkdir", "log4rs", "csv"]
std = ["std_app", "certval/std", "revocation"]
remote = ["certval/remote", "revocation", "std"]
pqc = ["pqcrypto-internals", "pqcrypto-dilithium", "pqcrypto-falcon", "pqcrypto-sphincsplus", "pqcrypto", "pqcrypto-traits"]
webpki = ["certval/webpki"]
gui = ["dioxus", "dioxus-desktop", "home", "default"]

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]